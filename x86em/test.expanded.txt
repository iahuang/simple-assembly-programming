; Code autogenerated by SAPplus

STRTMP0: .string "r1 ="
STRTMP1: .string "r2 ="
STRTMP2: .string "r3 ="
STRTMP3: .string "r4 ="
STRTMP4: .string "r5 ="
STRTMP5: .string "is equal to"
STRTMP6: .string "is not equal to"
.start main
yes: .string "yup"
a: .integer #13
main: movir #1 r1 ; r1 = #1
    movir #2 r2 ; r2 = #2
    outs STRTMP0 ; println "r1 =" r1
    outci #32
    push r1
    movrr r1 r1
    printi r1
    pop r1
    outci #10
    outs STRTMP1 ; println "r2 =" r2
    outci #32
    push r1
    movrr r2 r1
    printi r1
    pop r1
    outci #10
    outs STRTMP2 ; println "r3 =" r3
    outci #32
    push r1
    movrr r3 r1
    printi r1
    pop r1
    outci #10
    outs STRTMP3 ; println "r4 =" r4
    outci #32
    push r1
    movrr r4 r1
    printi r1
    pop r1
    outci #10
    outs STRTMP4 ; println "r5 =" r5
    outci #32
    push r1
    movrr r5 r1
    printi r1
    pop r1
    outci #10
push r1
push r2
movrr r1 r1
movar a r2
movxr r2 r2
cmprr r1 r2
pop r2
pop r1
jmpz bnIF0
jmp bnELSE0
bnIF0: push r1 ; println r1 "is equal to" *a
    movrr r1 r1
    printi r1
    pop r1
    outci #32
    outs STRTMP5
    outci #32
    push r1
    movar a r1
    movxr r1 r1
    printi r1
    pop r1
    outci #10
jmp bnEND0
bnELSE0: push r1 ; println r1 "is not equal to" *a
    movrr r1 r1
    printi r1
    pop r1
    outci #32
    outs STRTMP6
    outci #32
    push r1
    movar a r1
    movxr r1 r1
    printi r1
    pop r1
    outci #10
bnEND0: nop